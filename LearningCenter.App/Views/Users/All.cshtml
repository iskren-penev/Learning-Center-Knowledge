@using LearningCenter.Models.ViewModels.Admin
@model IEnumerable<AllUserViewModel>
@{
    ViewBag.Title = "Users";
}

<div class="row">
    <div class="col-sm-12">
        <h2 class="heading-centered">Users</h2>
    </div>
</div>
<div class="row">
    <form class="form-horizontal" method="get">
        <div class="col-sm-8 col-sm-offset-1">
            <div class="form-group">
                <input type="text" class="form-control" name="parameter" placeholder="Search for user" />
            </div>
        </div>
        <div class="col-sm-1">
            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </form>
</div>

<table class="table table-striped table-bordered">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Roles)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EnrolledCourses)
        </th>
    </tr>
    @foreach (var item in Model)
    {
        var indexOfAt = item.Email.IndexOf("@");
        var currentUsername = User.Identity.Name.Substring(0, indexOfAt);
        <tr>
            <td>
                @Html.ActionLink(item.Email, "ProfilePage", "Users", new { username = currentUsername })
            </td>
            <td>
                @Html.DisplayFor(model => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(model => item.LastName)
            </td>
            <td>
                @foreach (var role in item.Roles)
                {
                    <p>@role</p>
                }
            </td>
            <td>
                @Html.DisplayFor(model => item.EnrolledCourses)
            </td>
        </tr>
    }
</table>
