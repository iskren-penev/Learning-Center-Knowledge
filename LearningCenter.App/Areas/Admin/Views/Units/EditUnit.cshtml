@using LearningCenter.Models.ViewModels.Units
@model EditUnitViewModel
    
@{
    ViewBag.Title = "Edit Unit";
}

<br />
<br />
<div class="container-fluid custom-form">

    @using (Html.BeginForm("EditUnit", "Units", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <h2 class="heading-centered">Edit Unit</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                @Html.HiddenFor(model => model.Id)
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.ContentUrl, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.EditorFor(model => model.ContentUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContentUrl, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div class="form-group">
            <div class="row">
                <div class="col-xs-offset-2 col-xs-8">
                    @Html.ActionLink("Cancel", "UnitsList", "Admin", new { area = "Admin" }, new { @class = "btn btn-default" })
                    <input type="submit" value="Edit" class="btn btn-success" />
                </div>
            </div>
            <br />
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}