@model LearningCenter.Models.ViewModels.Forum.EditTopicViewModel

@{
    ViewBag.Title = "Edit topic";
}


@using (Html.BeginForm("EditTopic", "Forum", FormMethod.Post, new { @class = "custom-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2 class="heading-centered">Edit topic</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                @Html.HiddenFor(model => model.Id)
                </div>
            </div>
        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    <textarea name="Content" rows="10" cols="200" class="form-control" id="mytextarea"></textarea>
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-xs-offset-2 col-xs-8">
                    @Html.ActionLink("Cancel", "Detailed", "Forum",new { id= Model.Id}, new { @class = "btn btn-default" })
                    <input type="submit" value="Edit" class="btn btn-success" />
                </div>
            </div>
            <br />
        </div>
    </div>
}
@section scripts{
@Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        tinymce.init({
            selector: '#mytextarea',
            width: 800,
            heigth: 400,
            plugins: 'textcolor, link, wordcount, emoticons',
            textcolor_map: [
                "000000", "Black",
                "993300", "Burnt orange",
                "333300", "Dark olive",
                "003300", "Dark green",
                "003366", "Dark azure",
                "000080", "Navy Blue",
                "333399", "Indigo",
                "333333", "Very dark gray",
                "800000", "Maroon",
                "FF6600", "Orange",
                "808000", "Olive",
                "008000", "Green",
                "008080", "Teal",
                "0000FF", "Blue",
                "666699", "Grayish blue",
                "808080", "Gray",
                "FF0000", "Red",
                "FF9900", "Amber",
                "99CC00", "Yellow green",
                "339966", "Sea green",
                "33CCCC", "Turquoise",
                "3366FF", "Royal blue",
                "800080", "Purple",
                "999999", "Medium gray",
                "FF00FF", "Magenta",
                "FFCC00", "Gold",
                "FFFF00", "Yellow",
                "00FF00", "Lime",
                "00FFFF", "Aqua",
                "00CCFF", "Sky blue",
                "993366", "Red violet",
                "FFFFFF", "White",
                "FF99CC", "Pink",
                "FFCC99", "Peach",
                "FFFF99", "Light yellow",
                "CCFFCC", "Pale green",
                "CCFFFF", "Pale cyan",
                "99CCFF", "Light sky blue",
                "CC99FF", "Plum"],
            toolbar: 'styleselect | removeformat formats | forecolor  | bold italic underline | alignleft aligncenter alignright alignjustify | link image |undo redo | emoticons',
            menubar:false

        });
    </script>
}
